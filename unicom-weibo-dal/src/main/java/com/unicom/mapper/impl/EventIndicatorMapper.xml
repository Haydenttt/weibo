<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicom.mapper.EventIndicatorMapper">
  <resultMap id="BaseResultMap" type="com.unicom.model.EventIndicator">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="event_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="avg_vel" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="is_end" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="max_vel" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="continued_time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="near_hot_inf" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="creator" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updater" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, event_id, avg_vel, is_end, max_vel, continued_time, near_hot_inf, create_time, 
    creator, update_time, updater
  </sql>
  <select id="selectByExample" parameterType="com.unicom.model.EventIndicatorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from event_indicator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from event_indicator
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from event_indicator
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.unicom.model.EventIndicatorExample">
    delete from event_indicator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.unicom.model.EventIndicator" useGeneratedKeys="true">
    insert into event_indicator (event_id, avg_vel, is_end, 
      max_vel, continued_time, near_hot_inf, 
      create_time, creator, update_time, 
      updater)
    values (#{eventId,jdbcType=VARCHAR}, #{avgVel,jdbcType=DECIMAL}, #{isEnd,jdbcType=TINYINT}, 
      #{maxVel,jdbcType=INTEGER}, #{continuedTime,jdbcType=VARCHAR}, #{nearHotInf,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updater,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.unicom.model.EventIndicator" useGeneratedKeys="true">
    insert into event_indicator
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eventId != null">
        event_id,
      </if>
      <if test="avgVel != null">
        avg_vel,
      </if>
      <if test="isEnd != null">
        is_end,
      </if>
      <if test="maxVel != null">
        max_vel,
      </if>
      <if test="continuedTime != null">
        continued_time,
      </if>
      <if test="nearHotInf != null">
        near_hot_inf,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updater != null">
        updater,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eventId != null">
        #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="avgVel != null">
        #{avgVel,jdbcType=DECIMAL},
      </if>
      <if test="isEnd != null">
        #{isEnd,jdbcType=TINYINT},
      </if>
      <if test="maxVel != null">
        #{maxVel,jdbcType=INTEGER},
      </if>
      <if test="continuedTime != null">
        #{continuedTime,jdbcType=VARCHAR},
      </if>
      <if test="nearHotInf != null">
        #{nearHotInf,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update event_indicator
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eventId != null">
        event_id = #{record.eventId,jdbcType=VARCHAR},
      </if>
      <if test="record.avgVel != null">
        avg_vel = #{record.avgVel,jdbcType=DECIMAL},
      </if>
      <if test="record.isEnd != null">
        is_end = #{record.isEnd,jdbcType=TINYINT},
      </if>
      <if test="record.maxVel != null">
        max_vel = #{record.maxVel,jdbcType=INTEGER},
      </if>
      <if test="record.continuedTime != null">
        continued_time = #{record.continuedTime,jdbcType=VARCHAR},
      </if>
      <if test="record.nearHotInf != null">
        near_hot_inf = #{record.nearHotInf,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null">
        updater = #{record.updater,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event_indicator
    set id = #{record.id,jdbcType=INTEGER},
      event_id = #{record.eventId,jdbcType=VARCHAR},
      avg_vel = #{record.avgVel,jdbcType=DECIMAL},
      is_end = #{record.isEnd,jdbcType=TINYINT},
      max_vel = #{record.maxVel,jdbcType=INTEGER},
      continued_time = #{record.continuedTime,jdbcType=VARCHAR},
      near_hot_inf = #{record.nearHotInf,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      updater = #{record.updater,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicom.model.EventIndicator">
    update event_indicator
    <set>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="avgVel != null">
        avg_vel = #{avgVel,jdbcType=DECIMAL},
      </if>
      <if test="isEnd != null">
        is_end = #{isEnd,jdbcType=TINYINT},
      </if>
      <if test="maxVel != null">
        max_vel = #{maxVel,jdbcType=INTEGER},
      </if>
      <if test="continuedTime != null">
        continued_time = #{continuedTime,jdbcType=VARCHAR},
      </if>
      <if test="nearHotInf != null">
        near_hot_inf = #{nearHotInf,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicom.model.EventIndicator">
    update event_indicator
    set event_id = #{eventId,jdbcType=VARCHAR},
      avg_vel = #{avgVel,jdbcType=DECIMAL},
      is_end = #{isEnd,jdbcType=TINYINT},
      max_vel = #{maxVel,jdbcType=INTEGER},
      continued_time = #{continuedTime,jdbcType=VARCHAR},
      near_hot_inf = #{nearHotInf,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.unicom.model.EventIndicator">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="event_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="avg_vel" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="is_end" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="max_vel" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="continued_time" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="near_hot_inf" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="creator" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updater" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, event_id, avg_vel, is_end, max_vel, continued_time, near_hot_inf, create_time, 
    creator, update_time, updater
  </sql>
  <select id="selectByExample" parameterType="com.unicom.model.EventIndicatorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from event_indicator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from event_indicator
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from event_indicator
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.unicom.model.EventIndicatorExample">
    delete from event_indicator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.unicom.model.EventIndicator" useGeneratedKeys="true">
    insert into event_indicator (event_id, avg_vel, is_end, 
      max_vel, continued_time, near_hot_inf, 
      create_time, creator, update_time, 
      updater)
    values (#{eventId,jdbcType=VARCHAR}, #{avgVel,jdbcType=DECIMAL}, #{isEnd,jdbcType=TINYINT}, 
      #{maxVel,jdbcType=INTEGER}, #{continuedTime,jdbcType=VARCHAR}, #{nearHotInf,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updater,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.unicom.model.EventIndicator" useGeneratedKeys="true">
    insert into event_indicator
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eventId != null">
        event_id,
      </if>
      <if test="avgVel != null">
        avg_vel,
      </if>
      <if test="isEnd != null">
        is_end,
      </if>
      <if test="maxVel != null">
        max_vel,
      </if>
      <if test="continuedTime != null">
        continued_time,
      </if>
      <if test="nearHotInf != null">
        near_hot_inf,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updater != null">
        updater,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eventId != null">
        #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="avgVel != null">
        #{avgVel,jdbcType=DECIMAL},
      </if>
      <if test="isEnd != null">
        #{isEnd,jdbcType=TINYINT},
      </if>
      <if test="maxVel != null">
        #{maxVel,jdbcType=INTEGER},
      </if>
      <if test="continuedTime != null">
        #{continuedTime,jdbcType=VARCHAR},
      </if>
      <if test="nearHotInf != null">
        #{nearHotInf,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update event_indicator
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eventId != null">
        event_id = #{record.eventId,jdbcType=VARCHAR},
      </if>
      <if test="record.avgVel != null">
        avg_vel = #{record.avgVel,jdbcType=DECIMAL},
      </if>
      <if test="record.isEnd != null">
        is_end = #{record.isEnd,jdbcType=TINYINT},
      </if>
      <if test="record.maxVel != null">
        max_vel = #{record.maxVel,jdbcType=INTEGER},
      </if>
      <if test="record.continuedTime != null">
        continued_time = #{record.continuedTime,jdbcType=VARCHAR},
      </if>
      <if test="record.nearHotInf != null">
        near_hot_inf = #{record.nearHotInf,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null">
        updater = #{record.updater,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update event_indicator
    set id = #{record.id,jdbcType=INTEGER},
      event_id = #{record.eventId,jdbcType=VARCHAR},
      avg_vel = #{record.avgVel,jdbcType=DECIMAL},
      is_end = #{record.isEnd,jdbcType=TINYINT},
      max_vel = #{record.maxVel,jdbcType=INTEGER},
      continued_time = #{record.continuedTime,jdbcType=VARCHAR},
      near_hot_inf = #{record.nearHotInf,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      updater = #{record.updater,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicom.model.EventIndicator">
    update event_indicator
    <set>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=VARCHAR},
      </if>
      <if test="avgVel != null">
        avg_vel = #{avgVel,jdbcType=DECIMAL},
      </if>
      <if test="isEnd != null">
        is_end = #{isEnd,jdbcType=TINYINT},
      </if>
      <if test="maxVel != null">
        max_vel = #{maxVel,jdbcType=INTEGER},
      </if>
      <if test="continuedTime != null">
        continued_time = #{continuedTime,jdbcType=VARCHAR},
      </if>
      <if test="nearHotInf != null">
        near_hot_inf = #{nearHotInf,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicom.model.EventIndicator">
    update event_indicator
    set event_id = #{eventId,jdbcType=VARCHAR},
      avg_vel = #{avgVel,jdbcType=DECIMAL},
      is_end = #{isEnd,jdbcType=TINYINT},
      max_vel = #{maxVel,jdbcType=INTEGER},
      continued_time = #{continuedTime,jdbcType=VARCHAR},
      near_hot_inf = #{nearHotInf,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>